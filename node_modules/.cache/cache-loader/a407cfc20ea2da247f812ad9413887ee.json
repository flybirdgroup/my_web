{"remainingRequest":"/Users/flybird/Desktop/my-website/my_web/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js??ref--8-3!/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md","dependencies":[{"path":"/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md","mtime":1584588923362},{"path":"/Users/flybird/Desktop/my-website/my_web/.docusaurus/docusaurus-plugin-content-blog/site-blog-2020-3-18-text-cnn-md-ecd.json","mtime":1584610733345},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/cache-loader/dist/cjs.js","mtime":1584175948726},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/babel-loader/lib/index.js","mtime":1584175949112},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1584175972076},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js","mtime":1584175971523}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2ZseWJpcmQvRGVza3RvcC9teS13ZWJzaXRlL215X3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL2ZseWJpcmQvRGVza3RvcC9teS13ZWJzaXRlL215X3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDond2VsY29tZScsdGl0bGU6J1dlbGNvbWUnLGF1dGhvcjon5oub5pmT6LSkJyxhdXRob3JfdGl0bGU6J0FJIEVuZ2luZWVyJyxhdXRob3JfdXJsOidodHRwczovL2dpdGh1Yi5jb20vZmx5YmlyZGdyb3VwJyxhdXRob3JfaW1hZ2VfdXJsOidodHRwczovL3NzMy5iZHN0YXRpYy5jb20vNzBjRnY4U2hfUTFZbnhHa3BvV0sxSEY2aGh5L2l0L3U9MTYxNTczODYwMSwxNDM0NDM2MDM2JmZtPTI2JmdwPTAuanBnJyx0YWdzOlsnZmFjZWJvb2snLCdoZWxsbycsJ2RvY3VzYXVydXMnXX07ZXhwb3J0IHZhciBtZXRhZGF0YT17InBlcm1hbGluayI6Ii9ibG9nL3dlbGNvbWUiLCJzb3VyY2UiOiJAc2l0ZS9ibG9nLzIwMjAtMy0xOC10ZXh0Q05OLm1kIiwiZGVzY3JpcHRpb24iOiIjIOiPnOm4n+S5n+iDveeOqei9rE5MUC3ljbfnp6/npZ7nu4/nvZHnu5zmlofmnKzliIbnsbsiLCJkYXRlIjoiMjAyMC0wMy0xN1QxNjowMDowMC4wMDBaIiwidGFncyI6W3sibGFiZWwiOiJmYWNlYm9vayIsInBlcm1hbGluayI6Ii9ibG9nL3RhZ3MvZmFjZWJvb2sifSx7ImxhYmVsIjoiaGVsbG8iLCJwZXJtYWxpbmsiOiIvYmxvZy90YWdzL2hlbGxvIn0seyJsYWJlbCI6ImRvY3VzYXVydXMiLCJwZXJtYWxpbmsiOiIvYmxvZy90YWdzL2RvY3VzYXVydXMifV0sInRpdGxlIjoiV2VsY29tZSIsInRydW5jYXRlZCI6dHJ1ZSwicHJldkl0ZW0iOnsidGl0bGUiOiJXaGF0IGlzIGdvb2dsZSBjbG91ZCIsInBlcm1hbGluayI6Ii9ibG9nL2hlbGxvX3dvcmxkIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOifljp/nkIborrLop6MnLGlkOifljp/nkIborrLop6MnLGNoaWxkcmVuOlt7dmFsdWU6J+iuuuaWh+aguOW/g+eCuScsaWQ6J+iuuuaWh+aguOW/g+eCuScsY2hpbGRyZW46W119LHt2YWx1ZTonVGV4dENOTuWfuuehgOefpeivhicsaWQ6J3RleHRjbm7ln7rnoYDnn6Xor4YnLGNoaWxkcmVuOltdfSx7dmFsdWU6J+mhueebruWunueOsCcsaWQ6J+mhueebruWunueOsCcsY2hpbGRyZW46W119XX0se3ZhbHVlOifmqKHlnovmnoTlu7rkuI7orq3nu4MnLGlkOifmqKHlnovmnoTlu7rkuI7orq3nu4MnLGNoaWxkcmVuOlt7dmFsdWU6JzEu5a6a5LmJ572R57uc57uT5p6EJyxpZDonMeWumuS5iee9kee7nOe7k+aehCcsY2hpbGRyZW46W119LHt2YWx1ZTonMi7mlbDmja7lpITnkIbkuI7orq3nu4MnLGlkOicy5pWw5o2u5aSE55CG5LiO6K6t57uDJyxjaGlsZHJlbjpbXX0se3ZhbHVlOiczLuiuree7g+S4remXtOS/oeaBr+i+k+WHuicsaWQ6JzPorq3nu4PkuK3pl7Tkv6Hmga/ovpPlh7onLGNoaWxkcmVuOltdfSx7dmFsdWU6JzQu5qih5Z6L57uT5p6E5omT5Y2wJyxpZDonNOaooeWei+e7k+aehOaJk+WNsCcsY2hpbGRyZW46W119LHt2YWx1ZTonNS7mqKHlnovlr7zlh7onLGlkOic15qih5Z6L5a+85Ye6JyxjaGlsZHJlbjpbXX0se3ZhbHVlOic2LumihOa1i+aooeWeiycsaWQ6JzbpooTmtYvmqKHlnosnLGNoaWxkcmVuOltdfSx7dmFsdWU6Jzcu5YmN5ZCO56uv57uT5ZCIK2RvY2tlcumDqOe9sicsaWQ6JzfliY3lkI7nq6/nu5PlkIhkb2NrZXLpg6jnvbInLGNoaWxkcmVuOltdfV19XTt2YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiLoj5zpuJ/kuZ/og73njqnovaxubHAt5Y2356ev56We57uP572R57uc5paH5pys5YiG57G7In0sIlx1ODNEQ1x1OUUxRlx1NEU1Rlx1ODBGRFx1NzNBOVx1OEY2Q05MUC1cdTUzNzdcdTc5RUZcdTc5NUVcdTdFQ0ZcdTdGNTFcdTdFRENcdTY1ODdcdTY3MkNcdTUyMDZcdTdDN0IiKSxtZHgoInAiLG51bGwsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToic3Ryb25nIn0seyJocmVmIjoiaHR0cHM6Ly9teS13ZWJzaXRlLXNpeC5ub3cuc2gvIn0pLCJcdTRFOTFcdTZEQTZcdTRFQkFcdTVERTVcdTY2N0FcdTgwRkRcdTkwRThcdTk1RTgiKSwiXHUzMDBBTkxQXHU5NkY2XHU1N0ZBXHU3ODQwXHU1RkVCXHU5MDFGXHU0RTBBXHU2MjRCXHU2NTU5XHU3QTBCXHUzMDBCXHU4QkZFXHU3QTBCXHU4RDQ0XHU2NTk5IGJ5ICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToic3Ryb25nIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2ZseWJpcmRncm91cCJ9KSwiXHU3Qjk3XHU2Q0Q1XHU1REU1XHU3QTBCXHU1RTA4Olx1NjJEQlx1NjY1M1x1OEQyNCIpKSksbWR4KCJoMSIseyJpZCI6IuiPnOm4n+S5n+iDveeOqei9rG5scC3ljbfnp6/npZ7nu4/nvZHnu5zmlofmnKzliIbnsbstMSJ9LCJcdTgzRENcdTlFMUZcdTRFNUZcdTgwRkRcdTczQTlcdThGNkNOTFAtXHU1Mzc3XHU3OUVGXHU3OTVFXHU3RUNGXHU3RjUxXHU3RURDXHU2NTg3XHU2NzJDXHU1MjA2XHU3QzdCIiksbWR4KCJwIixudWxsLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InN0cm9uZyJ9LHsiaHJlZiI6Imh0dHBzOi8vbXktd2Vic2l0ZS1zaXgubm93LnNoLyJ9KSwiXHU0RTkxXHU2REE2XHU0RUJBXHU1REU1XHU2NjdBXHU4MEZEXHU5MEU4XHU5NUU4IiksIlx1MzAwQU5MUFx1OTZGNlx1NTdGQVx1Nzg0MFx1NUZFQlx1OTAxRlx1NEUwQVx1NjI0Qlx1NjU1OVx1N0EwQlx1MzAwQlx1OEJGRVx1N0EwQlx1OEQ0NFx1NjU5OSBieSAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InN0cm9uZyJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9mbHliaXJkZ3JvdXAifSksIlx1N0I5N1x1NkNENVx1NURFNVx1N0EwQlx1NUUwODpcdTYyREJcdTY2NTNcdThEMjQiKSkpLG1keCgiaDIiLHsiaWQiOiLljp/nkIborrLop6MifSwiXHU1MzlGXHU3NDA2XHU4QkIyXHU4OUUzIiksbWR4KCJwIixudWxsLCJUZXh0Q05OXHU1MUZBXHU1OTA0XHVGRjFBXHU4QkJBXHU2NTg3IixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cDovL3d3dy5hY2x3ZWIub3JnL2FudGhvbG9neS9EMTQtMTE4MSJ9KSwiQ29udm9sdXRpb25hbCBOZXVyYWwgTmV0d29ya3MgZm9yIFNlbnRlbmNlIENsYXNzaWZpY2F0aW9uIikpLG1keCgiaDMiLHsiaWQiOiLorrrmlofmoLjlv4PngrkifSwiXHU4QkJBXHU2NTg3XHU2ODM4XHU1RkMzXHU3MEI5IiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiLi4vc3RhdGljL2ltZy9UZXh0Q05OLnBuZyIsImFsdCI6InBuZyJ9KSkpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIlJlcHJlc2VudCBzZW50ZW5jZSB3aXRoICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LCJzdGF0aWMgYW5kIG5vbi1zdGF0aWMgY2hhbm5lbHMiKSwiLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSwiQ29udm9sdmUiKSwiIHdpdGggbXVsdGlwbGUgZmlsdGVyIHdpZHRocyBhbmQgZmVhdHVyZSBtYXBzLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJVc2UgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImxpIn0sIm1heC1vdmVyLXRpbWUgcG9vbGluZyIpLCIuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIlVzZSAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSwiZnVsbHkgY29ubmVjdGVkIGxheWVyIiksIiB3aXRoICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LCJkcm9wb3V0IiksIiBhbmQgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImxpIn0sInNvZnRtYXgiKSwiIG91cHV0LiIpKSxtZHgoImgzIix7ImlkIjoidGV4dGNubuWfuuehgOefpeivhiJ9LCJUZXh0Q05OXHU1N0ZBXHU3ODQwXHU3N0U1XHU4QkM2IiksbWR4KCJoNCIseyJpZCI6IuivjeWQkemHjyJ9LCJcdThCQ0RcdTU0MTFcdTkxQ0YiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJcdTk2OEZcdTY3M0FcdTUyMURcdTU5Q0JcdTUzMTYiKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiXHU5ODg0XHU4QkFEXHU3RUMzXHU4QkNEXHU1NDExXHU5MUNGXHU4RkRCXHU4ODRDXHU1MjFEXHU1OUNCXHU1MzE2LFx1NTcyOFx1OEJBRFx1N0VDM1x1OEZDN1x1N0EwQlx1NEUyRFx1NTZGQVx1NUI5QShDTk4tc3RhdGljKSxcdTZDRThcdTYxMEZcdTRFMEVcdTU2RkVcdTUwQ0ZDTk5cdTc2ODRcdTRFMERcdTU0MEMiKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiXHU5ODg0XHU4QkFEXHU3RUMzXHU4QkNEXHU1NDExXHU5MUNGXHU4RkRCXHU4ODRDXHU1MjFEXHU1OUNCXHU1MzE2LFx1NTcyOFx1OEJBRFx1N0VDM1x1OEZDN1x1N0EwQlx1NEUyRFx1NUZBRVx1OEMwMyhDTk4tbm9uLXN0YXRpYykiKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiXHU1OTFBXHU5MDFBXHU5MDUzKENOTi1tdWx0aWNoYW5uZWwpOlx1NUMwNlx1NTZGQVx1NUI5QVx1NzY4NFx1OTg4NFx1OEJBRFx1N0VDM1x1OEJDRFx1NTQxMVx1OTFDRlx1NTQ4Q1x1NUZBRVx1OEMwM1x1NzY4NFx1OEJDRFx1NTQxMVx1OTFDRlx1NTIwNlx1NTIyQlx1NEY1Q1x1NEUzQVx1NEUwMFx1NEUyQVx1OTAxQVx1OTA1MyhjaGFubmVsKSxcdTUzNzdcdTc5RUZcdTY0Q0RcdTRGNUNcdTU0MENcdTY1RjZcdTU3MjhcdTRFMjRcdTRFMkFcdTkwMUFcdTkwNTNcdTRFMEFcdThGREJcdTg4NEMsXHU1M0VGXHU0RUU1XHU3QzdCXHU2QkQ0XHU1NkZFXHU1MENGUkdCXHU0RTA5XHU5MDFBXHU5MDUzIikpLG1keCgiaDQiLHsiaWQiOiLor6bnu4bor7TmmI4ifSwiXHU4QkU2XHU3RUM2XHU4QkY0XHU2NjBFIiksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiXHU0RTBBXHU1NkZFXHU3Njg0XHU1NkZFXHU3MjQ3XHU0RTNBXHU0RjhCLFx1NTNFNVx1NUI1MFx1OTU3Rlx1NUVBNlx1NEUzQW49OSxcdThCQ0RcdTU0MTFcdTkxQ0ZcdTdFRjRcdTVFQTZrXHU0RTNBNixmaWx0ZXJcdTY3MDlcdTRFMjRcdTc5Q0RcdTdBOTdcdTUzRTNcdTU5MjdcdTVDMEYsXHU2QkNGXHU3OUNEXHU2NzA5Mlx1NEUyQSxcdTYyNDBcdTRFRTVmaWx0ZXJcdTY3MDk0XHU0RTJBLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJcdTdFQTJcdTgyNzJcdTY4NDZcdTc2ODRcdTRFM0FoPTIsXHU1Mzc3XHU3OUVGXHU1NDBFXHU3Njg0XHU1NDExXHU5MUNGXHU3RUY0XHU1RUE2XHU0RTNBbi1oKzE9OS0yKzE9OCIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJcdTlFQzRcdTgyNzJcdTY4NDZoPTMsXHU1Mzc3XHU3OUVGXHU1NDBFXHU3Njg0XHU1NDExXHU5MUNGXHU3RUY0XHU1RUE2XHU2NjJGbi1oKzE9OS0zKzE9NyAoXHU4QkJBXHU2NTg3XHU1MzlGXHU1NkZFXHU1QzExXHU3NTNCXHU0RTg2XHU0RTAwXHU0RTJBXHU3RUY0XHU1RUE2KSIpKSxtZHgoImgzIix7ImlkIjoi6aG555uu5a6e546wIn0sIlx1OTg3OVx1NzZFRVx1NUI5RVx1NzNCMCIpLG1keCgicCIsbnVsbCwiVGV4dENOTiBcdTc2ODRcdTdGNTFcdTdFRENcdTdFRDNcdTY3ODRcdUZGMUEiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIuLi9zdGF0aWMvaW1nL1RleHRDTk5fbmV0d29ya19zdHJ1Y3R1cmUucG5nIiwiYWx0IjoicG5nIn0pKSksbWR4KCJoMiIseyJpZCI6IuaooeWei+aehOW7uuS4juiuree7gyJ9LCJcdTZBMjFcdTU3OEJcdTY3ODRcdTVFRkFcdTRFMEVcdThCQURcdTdFQzMiKSxtZHgoImgzIix7ImlkIjoiMeWumuS5iee9kee7nOe7k+aehCJ9LCIxLlx1NUI5QVx1NEU0OVx1N0Y1MVx1N0VEQ1x1N0VEM1x1Njc4NCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJmcm9tIHRlbnNvcmZsb3cua2VyYXMgaW1wb3J0IElucHV0LCBNb2RlbFxuZnJvbSB0ZW5zb3JmbG93LmtlcmFzLmxheWVycyBpbXBvcnQgRW1iZWRkaW5nLCBEZW5zZSwgQ29udjFELCBHbG9iYWxNYXhQb29saW5nMUQsIENvbmNhdGVuYXRlLCBEcm9wb3V0XG5cbiNcdTkxQ0RcdTg5ODFcdTUzQzJcdTY1NzBcdTg5RTNcdTkxQ0FcbiNtYXhsZW46XHU1M0U1XHU1QjUwXHU2NzAwXHU1OTI3XHU5NTdGXHU1RUE2XG4jbWF4X2ZlYXR1cmVzOlx1OEJDRFx1NTE3OFx1NjcwMFx1NTkyN1x1NjU3MFx1OTFDRlxuIyBlbWJlZGluZ19kaW1zOlx1OEJDRFx1NTQxMVx1OTFDRlx1N0VGNFx1NUVBNlx1NjU3MFxuI2NsYXNzX251bTogXHU1MjA2XHU3QzdCXHU2NTcwXG4jbGFzdF9hY3RpdmF0aW9uOlx1NkZDMFx1NkQzQlx1NTFGRFx1NjU3MFxuXG5jbGFzcyBUZXh0Q05OKG9iamVjdCk6XG4gICAgZGVmIF9faW5pdF9fKHNlbGYsIG1heGxlbiwgbWF4X2ZlYXR1cmVzLCBlbWJlZGRpbmdfZGltcyxcbiAgICAgICAgICAgICAgICAgY2xhc3NfbnVtPTUsXG4gICAgICAgICAgICAgICAgIGxhc3RfYWN0aXZhdGlvbj0nc29mdG1heCcpOlxuICAgICAgICBzZWxmLm1heGxlbiA9IG1heGxlblxuICAgICAgICBzZWxmLm1heF9mZWF0dXJlcyA9IG1heF9mZWF0dXJlc1xuICAgICAgICBzZWxmLmVtYmVkZGluZ19kaW1zID0gZW1iZWRkaW5nX2RpbXNcbiAgICAgICAgc2VsZi5jbGFzc19udW0gPSBjbGFzc19udW1cbiAgICAgICAgc2VsZi5sYXN0X2FjdGl2YXRpb24gPSBsYXN0X2FjdGl2YXRpb25cblxuICAgIGRlZiBnZXRfbW9kZWwoc2VsZik6XG4gICAgICAgIGlucHV0ID0gSW5wdXQoKHNlbGYubWF4bGVuLCkpXG4gICAgICAgIGVtYmVkZGluZyA9IEVtYmVkZGluZyhzZWxmLm1heF9mZWF0dXJlcywgc2VsZi5lbWJlZGRpbmdfZGltcywgaW5wdXRfbGVuZ3RoPXNlbGYubWF4bGVuKShpbnB1dClcbiAgICAgICAgY29udnMgPSBbXVxuICAgICAgICBmb3Iga2VybmVsX3NpemUgaW4gWzMsIDQsIDVdOlxuICAgICAgICAgICAgYyA9IENvbnYxRCgxMjgsIGtlcm5lbF9zaXplLCBhY3RpdmF0aW9uPSdyZWx1JykoZW1iZWRkaW5nKVxuICAgICAgICAgICAgYyA9IEdsb2JhbE1heFBvb2xpbmcxRCgpKGMpXG4gICAgICAgICAgICBjb252cy5hcHBlbmQoYylcbiAgICAgICAgeCA9IENvbmNhdGVuYXRlKCkoY29udnMpXG5cbiAgICAgICAgb3V0cHV0ID0gRGVuc2Uoc2VsZi5jbGFzc19udW0sIGFjdGl2YXRpb249c2VsZi5sYXN0X2FjdGl2YXRpb24pKHgpXG4gICAgICAgIG1vZGVsID0gTW9kZWwoaW5wdXRzPWlucHV0LCBvdXRwdXRzPW91dHB1dClcbiAgICAgICAgcmV0dXJuIG1vZGVsXG4iKSksbWR4KCJoMyIseyJpZCI6IjLmlbDmja7lpITnkIbkuI7orq3nu4MifSwiMi5cdTY1NzBcdTYzNkVcdTU5MDRcdTc0MDZcdTRFMEVcdThCQURcdTdFQzMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5dGhvbiJ9KSwiZnJvbSB0ZW5zb3JmbG93LmtlcmFzLnByZXByb2Nlc3NpbmcgaW1wb3J0IHNlcXVlbmNlXG5pbXBvcnQgcmFuZG9tXG5mcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0XG5mcm9tIHRlbnNvcmZsb3cua2VyYXMuY2FsbGJhY2tzIGltcG9ydCBFYXJseVN0b3BwaW5nLCBNb2RlbENoZWNrcG9pbnRcbmZyb20gdGVuc29yZmxvdy5rZXJhcy51dGlscyBpbXBvcnQgdG9fY2F0ZWdvcmljYWxcbmZyb20gdXRpbHMgaW1wb3J0ICpcblxuIyBcdThERUZcdTVGODRcdTdCNDlcdTkxNERcdTdGNkVcbmRhdGFfZGlyID0gXCIuL3Byb2Nlc3NlZF9kYXRhXCJcbnZvY2FiX2ZpbGUgPSBcIi4vdm9jYWIvdm9jYWIudHh0XCJcbnZvY2FiX3NpemUgPSA0MDAwMFxuXG4jIFx1Nzk1RVx1N0VDRlx1N0Y1MVx1N0VEQ1x1OTE0RFx1N0Y2RVxubWF4X2ZlYXR1cmVzID0gNDAwMDFcbm1heGxlbiA9IDEwMFxuYmF0Y2hfc2l6ZSA9IDY0XG5lbWJlZGRpbmdfZGltcyA9IDUwXG5lcG9jaHMgPSA4XG5cbnByaW50KCdcdTY1NzBcdTYzNkVcdTk4ODRcdTU5MDRcdTc0MDZcdTRFMEVcdTUyQTBcdThGN0RcdTY1NzBcdTYzNkUuLi4nKVxuIyBcdTU5ODJcdTY3OUNcdTRFMERcdTVCNThcdTU3MjhcdThCQ0RcdTZDNDdcdTg4NjhcdUZGMENcdTkxQ0RcdTVFRkFcbmlmIG5vdCBvcy5wYXRoLmV4aXN0cyh2b2NhYl9maWxlKTogIFxuICAgIGJ1aWxkX3ZvY2FiKGRhdGFfZGlyLCB2b2NhYl9maWxlLCB2b2NhYl9zaXplKVxuIyBcdTgzQjdcdTVGOTcgXHU4QkNEXHU2QzQ3L1x1N0M3Qlx1NTIyQiBcdTRFMEVpZFx1NjYyMFx1NUMwNFx1NUI1N1x1NTE3OFxuY2F0ZWdvcmllcywgY2F0X3RvX2lkID0gcmVhZF9jYXRlZ29yeSgpXG53b3Jkcywgd29yZF90b19pZCA9IHJlYWRfdm9jYWIodm9jYWJfZmlsZSlcblxuIyBcdTUxNjhcdTkwRThcdTY1NzBcdTYzNkVcbngsIHkgPSByZWFkX2ZpbGVzKGRhdGFfZGlyKVxuZGF0YSA9IGxpc3QoemlwKHgseSkpXG5kZWwgeCx5XG4jIFx1NEU3MVx1NUU4RlxucmFuZG9tLnNodWZmbGUoZGF0YSlcbiMgXHU1MjA3XHU1MjA2XHU4QkFEXHU3RUMzXHU5NkM2XHU1NDhDXHU2RDRCXHU4QkQ1XHU5NkM2XG50cmFpbl9kYXRhLCB0ZXN0X2RhdGEgPSB0cmFpbl90ZXN0X3NwbGl0KGRhdGEpXG4jIFx1NUJGOVx1NjU4N1x1NjcyQ1x1NzY4NFx1OEJDRGlkXHU1NDhDXHU3QzdCXHU1MjJCaWRcdThGREJcdTg4NENcdTdGMTZcdTc4MDFcbnhfdHJhaW4gPSBlbmNvZGVfc2VudGVuY2VzKFtjb250ZW50WzBdIGZvciBjb250ZW50IGluIHRyYWluX2RhdGFdLCB3b3JkX3RvX2lkKVxueV90cmFpbiA9IHRvX2NhdGVnb3JpY2FsKGVuY29kZV9jYXRlKFtjb250ZW50WzFdIGZvciBjb250ZW50IGluIHRyYWluX2RhdGFdLCBjYXRfdG9faWQpKVxueF90ZXN0ID0gZW5jb2RlX3NlbnRlbmNlcyhbY29udGVudFswXSBmb3IgY29udGVudCBpbiB0ZXN0X2RhdGFdLCB3b3JkX3RvX2lkKVxueV90ZXN0ID0gdG9fY2F0ZWdvcmljYWwoZW5jb2RlX2NhdGUoW2NvbnRlbnRbMV0gZm9yIGNvbnRlbnQgaW4gdGVzdF9kYXRhXSwgY2F0X3RvX2lkKSlcblxucHJpbnQoJ1x1NUJGOVx1NUU4Rlx1NTIxN1x1NTA1QXBhZGRpbmdcdUZGMENcdTRGRERcdThCQzFcdTY2MkYgc2FtcGxlcyp0aW1lc3RlcCBcdTc2ODRcdTdFRjRcdTVFQTYnKVxueF90cmFpbiA9IHNlcXVlbmNlLnBhZF9zZXF1ZW5jZXMoeF90cmFpbiwgbWF4bGVuPW1heGxlbilcbnhfdGVzdCA9IHNlcXVlbmNlLnBhZF9zZXF1ZW5jZXMoeF90ZXN0LCBtYXhsZW49bWF4bGVuKVxucHJpbnQoJ3hfdHJhaW4gc2hhcGU6JywgeF90cmFpbi5zaGFwZSlcbnByaW50KCd4X3Rlc3Qgc2hhcGU6JywgeF90ZXN0LnNoYXBlKVxuXG5wcmludCgnXHU2Nzg0XHU1RUZBXHU2QTIxXHU1NzhCLi4uJylcbm1vZGVsID0gVGV4dENOTihtYXhsZW4sIG1heF9mZWF0dXJlcywgZW1iZWRkaW5nX2RpbXMpLmdldF9tb2RlbCgpXG5tb2RlbC5jb21waWxlKCdhZGFtJywgJ2NhdGVnb3JpY2FsX2Nyb3NzZW50cm9weScsIG1ldHJpY3M9WydhY2N1cmFjeSddKVxuXG5wcmludCgnXHU4QkFEXHU3RUMzLi4uJylcbiMgXHU4QkJFXHU1QjlBY2FsbGJhY2tzXHU1NkRFXHU4QzAzXHU1MUZEXHU2NTcwXG5teV9jYWxsYmFja3MgPSBbXG4gICAgTW9kZWxDaGVja3BvaW50KCcuL2Nubl9tb2RlbC5oNScsIHZlcmJvc2U9MSksXG4gICAgRWFybHlTdG9wcGluZyhtb25pdG9yPSd2YWxfYWNjdXJhY3knLCBwYXRpZW5jZT0yLCBtb2RlPSdtYXgnKVxuXVxuXG4jIGZpdFx1NjJERlx1NTQwOFx1NjU3MFx1NjM2RVxuaGlzdG9yeSA9IG1vZGVsLmZpdCh4X3RyYWluLCB5X3RyYWluLFxuICAgICAgICAgIGJhdGNoX3NpemU9YmF0Y2hfc2l6ZSxcbiAgICAgICAgICBlcG9jaHM9ZXBvY2hzLFxuICAgICAgICAgIGNhbGxiYWNrcz1teV9jYWxsYmFja3MsXG4gICAgICAgICAgdmFsaWRhdGlvbl9kYXRhPSh4X3Rlc3QsIHlfdGVzdCkpXG5cbiNwcmludCgnXHU1QkY5XHU2RDRCXHU4QkQ1XHU5NkM2XHU5ODg0XHU2RDRCLi4uJylcbiNyZXN1bHQgPSBtb2RlbC5wcmVkaWN0KHhfdGVzdClcbiIpKSxtZHgoImgzIix7ImlkIjoiM+iuree7g+S4remXtOS/oeaBr+i+k+WHuiJ9LCIzLlx1OEJBRFx1N0VDM1x1NEUyRFx1OTVGNFx1NEZFMVx1NjA2Rlx1OEY5M1x1NTFGQSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJpbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0XG5wbHQuc3dpdGNoX2JhY2tlbmQoJ2FnZycpXG4lbWF0cGxvdGxpYiBpbmxpbmVcblxuZmlnMSA9IHBsdC5maWd1cmUoKVxucGx0LnBsb3QoaGlzdG9yeS5oaXN0b3J5Wydsb3NzJ10sJ3InLGxpbmV3aWR0aD0zLjApXG5wbHQucGxvdChoaXN0b3J5Lmhpc3RvcnlbJ3ZhbF9sb3NzJ10sJ2InLGxpbmV3aWR0aD0zLjApXG5wbHQubGVnZW5kKFsnVHJhaW5pbmcgbG9zcycsICdWYWxpZGF0aW9uIExvc3MnXSxmb250c2l6ZT0xOClcbnBsdC54bGFiZWwoJ0Vwb2NocyAnLGZvbnRzaXplPTE2KVxucGx0LnlsYWJlbCgnTG9zcycsZm9udHNpemU9MTYpXG5wbHQudGl0bGUoJ0xvc3MgQ3VydmVzIDpDTk4nLGZvbnRzaXplPTE2KVxuZmlnMS5zYXZlZmlnKCdsb3NzX2Nubi5wbmcnKVxucGx0LnNob3coKVxuIikpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii4uL3N0YXRpYy9pbWcvb3V0cHV0XzhfMC5wbmciLCJhbHQiOiJwbmcifSkpKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5dGhvbiJ9KSwiZmlnMj1wbHQuZmlndXJlKClcbnBsdC5wbG90KGhpc3RvcnkuaGlzdG9yeVsnYWNjJ10sJ3InLGxpbmV3aWR0aD0zLjApXG5wbHQucGxvdChoaXN0b3J5Lmhpc3RvcnlbJ3ZhbF9hY2MnXSwnYicsbGluZXdpZHRoPTMuMClcbnBsdC5sZWdlbmQoWydUcmFpbmluZyBBY2N1cmFjeScsICdWYWxpZGF0aW9uIEFjY3VyYWN5J10sZm9udHNpemU9MTgpXG5wbHQueGxhYmVsKCdFcG9jaHMgJyxmb250c2l6ZT0xNilcbnBsdC55bGFiZWwoJ0FjY3VyYWN5Jyxmb250c2l6ZT0xNilcbnBsdC50aXRsZSgnQWNjdXJhY3kgQ3VydmVzIDogQ05OJyxmb250c2l6ZT0xNilcbmZpZzIuc2F2ZWZpZygnYWNjdXJhY3lfY25uLnBuZycpXG5wbHQuc2hvdygpXG4iKSksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiLi4vc3RhdGljL2ltZy9vdXRwdXRfOV8wLnBuZyIsImFsdCI6InBuZyJ9KSkpLG1keCgiaDMiLHsiaWQiOiI05qih5Z6L57uT5p6E5omT5Y2wIn0sIjQuXHU2QTIxXHU1NzhCXHU3RUQzXHU2Nzg0XHU2MjUzXHU1MzcwIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1weXRob24ifSksImZyb20gdGVuc29yZmxvdy5rZXJhcy51dGlscyBpbXBvcnQgcGxvdF9tb2RlbFxucGxvdF9tb2RlbChtb2RlbCwgc2hvd19zaGFwZXM9VHJ1ZSwgc2hvd19sYXllcl9uYW1lcz1UcnVlKVxuIikpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii4uL3N0YXRpYy9pbWcvQ05OX3N0cnVjdHVyZS5wbmciLCJhbHQiOiJwbmcifSkpKSxtZHgoImgzIix7ImlkIjoiNeaooeWei+WvvOWHuiJ9LCI1Llx1NkEyMVx1NTc4Qlx1NUJGQ1x1NTFGQSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJpbXBvcnQgdGVuc29yZmxvdyBhcyB0ZlxuaW1wb3J0IHNodXRpbCBcbm1vZGVsID0gdGYua2VyYXMubW9kZWxzLmxvYWRfbW9kZWwoJy4vY25uX21vZGVsLmg1JylcbiIpKSxtZHgoImgzIix7ImlkIjoiNumihOa1i+aooeWeiyJ9LCI2Llx1OTg4NFx1NkQ0Qlx1NkEyMVx1NTc4QiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJpbXBvcnQgamllYmFcbnRleHQgPSBcIlx1Njc2OFx1NUU0Mlx1NTk3RFx1NkYwMlx1NEVBRSxcdTUzRDFcdTc1MUZcdTUzOUZcdTVCNTBcdTVGMzlcIlxucHJpbnQoamllYmEubGN1dCh0ZXh0KSlcbnRleHRfc2VnID0gZW5jb2RlX3NlbnRlbmNlcyhbamllYmEubGN1dCh0ZXh0KV0sIHdvcmRfdG9faWQpXG50ZXh0X2lucHV0ID0gc2VxdWVuY2UucGFkX3NlcXVlbmNlcyh0ZXh0X3NlZywgbWF4bGVuPW1heGxlbilcbnByaW50KG1vZGVsLnByZWRpY3QodGV4dF9pbnB1dCkpXG4iKSksbWR4KCJoMyIseyJpZCI6IjfliY3lkI7nq6/nu5PlkIhkb2NrZXLpg6jnvbIifSwiNy5cdTUyNERcdTU0MEVcdTdBRUZcdTdFRDNcdTU0MDgrZG9ja2VyXHU5MEU4XHU3RjcyIiksbWR4KCJwIixudWxsLCJcdTk4NzlcdTc2RUVkZW1vXHVGRjFBZG9ja2VyXHU5MEU4XHU3RjcyXHU5NEZFXHU2M0E1OiIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vaHViLmRvY2tlci5jb20vcmVwb3NpdG9yeS9kb2NrZXIvZmx5YmlyZGdyb3VwL2NsYXNzaWZpZXIifSksIlx1NEUyRFx1NjU4N1x1NjVCMFx1OTVGQlx1NTkxQVx1NTIwNlx1N0M3QmRlbW8iKSksbWR4KCJwIixudWxsLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZG9ja2VyXHU1NDJGXHU1MkE4XHU1NDdEXHU0RUU0IikpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJkb2NrZXIgcnVuIC1wIDEyNy4wLjAuMTo4MDo1MDAwL3RjcCBmbHliaXJkZ3JvdXAvY2xhc3NpZmllclxuIikpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii4uL3N0YXRpYy9pbWcvZG9ja2VyMS5wbmciLCJhbHQiOiJwbmcifSkpKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIuLi9zdGF0aWMvaW1nL2RvY2tlcjIucG5nIiwiYWx0IjoicG5nIn0pKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}