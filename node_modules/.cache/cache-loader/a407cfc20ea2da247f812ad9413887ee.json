{"remainingRequest":"/Users/flybird/Desktop/my-website/my_web/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js??ref--8-3!/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md","dependencies":[{"path":"/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md","mtime":1584629583576},{"path":"/Users/flybird/Desktop/my-website/my_web/.docusaurus/docusaurus-plugin-content-blog/site-blog-2020-3-18-text-cnn-md-ecd.json","mtime":1585294697802},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2ZseWJpcmQvRGVza3RvcC9teS13ZWJzaXRlL215X3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOid3ZWxjb21lJyx0aXRsZTonV2VsY29tZScsYXV0aG9yOifmi5vmmZPotKQnLGF1dGhvcl90aXRsZTonQUkgRW5naW5lZXInLGF1dGhvcl91cmw6J2h0dHBzOi8vZ2l0aHViLmNvbS9mbHliaXJkZ3JvdXAnLGF1dGhvcl9pbWFnZV91cmw6J2h0dHBzOi8vc3MzLmJkc3RhdGljLmNvbS83MGNGdjhTaF9RMVlueEdrcG9XSzFIRjZoaHkvaXQvdT0xNjE1NzM4NjAxLDE0MzQ0MzYwMzYmZm09MjYmZ3A9MC5qcGcnLHRhZ3M6WydmYWNlYm9vaycsJ2hlbGxvJywnZG9jdXNhdXJ1cyddfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJwZXJtYWxpbmsiOiIvYmxvZy93ZWxjb21lIiwic291cmNlIjoiQHNpdGUvYmxvZy8yMDIwLTMtMTgtdGV4dENOTi5tZCIsImRlc2NyaXB0aW9uIjoiIyDoj5zpuJ/kuZ/og73njqnovaxOTFAt5Y2356ev56We57uP572R57uc5paH5pys5YiG57G7IiwiZGF0ZSI6IjIwMjAtMDMtMTdUMTY6MDA6MDAuMDAwWiIsInRhZ3MiOlt7ImxhYmVsIjoiZmFjZWJvb2siLCJwZXJtYWxpbmsiOiIvYmxvZy90YWdzL2ZhY2Vib29rIn0seyJsYWJlbCI6ImhlbGxvIiwicGVybWFsaW5rIjoiL2Jsb2cvdGFncy9oZWxsbyJ9LHsibGFiZWwiOiJkb2N1c2F1cnVzIiwicGVybWFsaW5rIjoiL2Jsb2cvdGFncy9kb2N1c2F1cnVzIn1dLCJ0aXRsZSI6IldlbGNvbWUiLCJ0cnVuY2F0ZWQiOnRydWUsInByZXZJdGVtIjp7InRpdGxlIjoiV2hhdCBpcyBnb29nbGUgY2xvdWQiLCJwZXJtYWxpbmsiOiIvYmxvZy9oZWxsb193b3JsZCJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOifljp/nkIborrLop6MnLGlkOifljp/nkIborrLop6MnLGNoaWxkcmVuOlt7dmFsdWU6J+iuuuaWh+aguOW/g+eCuScsaWQ6J+iuuuaWh+aguOW/g+eCuScsY2hpbGRyZW46W119LHt2YWx1ZTonVGV4dENOTuWfuuehgOefpeivhicsaWQ6J3RleHRjbm7ln7rnoYDnn6Xor4YnLGNoaWxkcmVuOltdfSx7dmFsdWU6J+mhueebruWunueOsCcsaWQ6J+mhueebruWunueOsCcsY2hpbGRyZW46W119XX0se3ZhbHVlOifmqKHlnovmnoTlu7rkuI7orq3nu4MnLGlkOifmqKHlnovmnoTlu7rkuI7orq3nu4MnLGNoaWxkcmVuOlt7dmFsdWU6JzEu5a6a5LmJ572R57uc57uT5p6EJyxpZDonMeWumuS5iee9kee7nOe7k+aehCcsY2hpbGRyZW46W119LHt2YWx1ZTonMi7mlbDmja7lpITnkIbkuI7orq3nu4MnLGlkOicy5pWw5o2u5aSE55CG5LiO6K6t57uDJyxjaGlsZHJlbjpbXX0se3ZhbHVlOiczLuiuree7g+S4remXtOS/oeaBr+i+k+WHuicsaWQ6JzPorq3nu4PkuK3pl7Tkv6Hmga/ovpPlh7onLGNoaWxkcmVuOltdfSx7dmFsdWU6JzQu5qih5Z6L57uT5p6E5omT5Y2wJyxpZDonNOaooeWei+e7k+aehOaJk+WNsCcsY2hpbGRyZW46W119LHt2YWx1ZTonNS7mqKHlnovlr7zlh7onLGlkOic15qih5Z6L5a+85Ye6JyxjaGlsZHJlbjpbXX0se3ZhbHVlOic2LumihOa1i+aooeWeiycsaWQ6JzbpooTmtYvmqKHlnosnLGNoaWxkcmVuOltdfSx7dmFsdWU6Jzcu5YmN5ZCO56uv57uT5ZCIK2RvY2tlcumDqOe9sicsaWQ6JzfliY3lkI7nq6/nu5PlkIhkb2NrZXLpg6jnvbInLGNoaWxkcmVuOltdfV19XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMSIseyJpZCI6IuiPnOm4n+S5n+iDveeOqei9rG5scC3ljbfnp6/npZ7nu4/nvZHnu5zmlofmnKzliIbnsbsifSxg6I+c6bif5Lmf6IO9546p6L2sTkxQLeWNt+enr+elnue7j+e9kee7nOaWh+acrOWIhuexu2ApLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJzdHJvbmcifSx7ImhyZWYiOiJodHRwczovL215LXdlYnNpdGUtc2l4Lm5vdy5zaC8ifSksYOS6kea2puS6uuW3peaZuuiDvemDqOmXqGApLGDjgIpOTFDpm7bln7rnoYDlv6vpgJ/kuIrmiYvmlZnnqIvjgIvor77nqIvotYTmlpkgYnkgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJzdHJvbmcifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vZmx5YmlyZGdyb3VwIn0pLGDnrpfms5Xlt6XnqIvluIg65oub5pmT6LSkYCkpKSxtZHgoImgxIix7ImlkIjoi6I+c6bif5Lmf6IO9546p6L2sbmxwLeWNt+enr+elnue7j+e9kee7nOaWh+acrOWIhuexuy0xIn0sYOiPnOm4n+S5n+iDveeOqei9rE5MUC3ljbfnp6/npZ7nu4/nvZHnu5zmlofmnKzliIbnsbtgKSxtZHgoInAiLG51bGwsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToic3Ryb25nIn0seyJocmVmIjoiaHR0cHM6Ly9teS13ZWJzaXRlLXNpeC5ub3cuc2gvIn0pLGDkupHmtqbkurrlt6Xmmbrog73pg6jpl6hgKSxg44CKTkxQ6Zu25Z+656GA5b+r6YCf5LiK5omL5pWZ56iL44CL6K++56iL6LWE5paZIGJ5IGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToic3Ryb25nIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2ZseWJpcmRncm91cCJ9KSxg566X5rOV5bel56iL5biIOuaLm+aZk+i0pGApKSksbWR4KCJoMiIseyJpZCI6IuWOn+eQhuiusuinoyJ9LGDljp/nkIborrLop6NgKSxtZHgoInAiLG51bGwsYFRleHRDTk7lh7rlpITvvJrorrrmlodgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwOi8vd3d3LmFjbHdlYi5vcmcvYW50aG9sb2d5L0QxNC0xMTgxIn0pLGBDb252b2x1dGlvbmFsIE5ldXJhbCBOZXR3b3JrcyBmb3IgU2VudGVuY2UgQ2xhc3NpZmljYXRpb25gKSksbWR4KCJoMyIseyJpZCI6IuiuuuaWh+aguOW/g+eCuSJ9LGDorrrmlofmoLjlv4PngrlgKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIuLi9pbWcvVGV4dENOTi5wbmciLCJhbHQiOiJwbmcifSkpKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBSZXByZXNlbnQgc2VudGVuY2Ugd2l0aCBgLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSxgc3RhdGljIGFuZCBub24tc3RhdGljIGNoYW5uZWxzYCksYC5gKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImxpIn0sYENvbnZvbHZlYCksYCB3aXRoIG11bHRpcGxlIGZpbHRlciB3aWR0aHMgYW5kIGZlYXR1cmUgbWFwcy5gKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgVXNlIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LGBtYXgtb3Zlci10aW1lIHBvb2xpbmdgKSxgLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBVc2UgYCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImxpIn0sYGZ1bGx5IGNvbm5lY3RlZCBsYXllcmApLGAgd2l0aCBgLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSxgZHJvcG91dGApLGAgYW5kIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LGBzb2Z0bWF4YCksYCBvdXB1dC5gKSksbWR4KCJoMyIseyJpZCI6InRleHRjbm7ln7rnoYDnn6Xor4YifSxgVGV4dENOTuWfuuehgOefpeivhmApLG1keCgiaDQiLHsiaWQiOiLor43lkJHph48ifSxg6K+N5ZCR6YePYCksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxg6ZqP5py65Yid5aeL5YyWYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOmihOiuree7g+ivjeWQkemHj+i/m+ihjOWIneWni+WMlizlnKjorq3nu4Pov4fnqIvkuK3lm7rlrpooQ05OLXN0YXRpYyks5rOo5oSP5LiO5Zu+5YOPQ05O55qE5LiN5ZCMYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOmihOiuree7g+ivjeWQkemHj+i/m+ihjOWIneWni+WMlizlnKjorq3nu4Pov4fnqIvkuK3lvq7osIMoQ05OLW5vbi1zdGF0aWMpYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOWkmumAmumBkyhDTk4tbXVsdGljaGFubmVsKTrlsIblm7rlrprnmoTpooTorq3nu4Por43lkJHph4/lkozlvq7osIPnmoTor43lkJHph4/liIbliKvkvZzkuLrkuIDkuKrpgJrpgZMoY2hhbm5lbCks5Y2356ev5pON5L2c5ZCM5pe25Zyo5Lik5Liq6YCa6YGT5LiK6L+b6KGMLOWPr+S7peexu+avlOWbvuWDj1JHQuS4iemAmumBk2ApKSxtZHgoImg0Iix7ImlkIjoi6K+m57uG6K+05piOIn0sYOivpue7huivtOaYjmApLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYOS4iuWbvueahOWbvueJh+S4uuS+iyzlj6XlrZDplb/luqbkuLpuPTks6K+N5ZCR6YeP57u05bqma+S4ujYsZmlsdGVy5pyJ5Lik56eN56qX5Y+j5aSn5bCPLOavj+enjeaciTLkuKos5omA5LulZmlsdGVy5pyJNOS4qi5gKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxg57qi6Imy5qGG55qE5Li6aD0yLOWNt+enr+WQjueahOWQkemHj+e7tOW6puS4um4taCsxPTktMisxPThgKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxg6buE6Imy5qGGaD0zLOWNt+enr+WQjueahOWQkemHj+e7tOW6puaYr24taCsxPTktMysxPTcgKOiuuuaWh+WOn+WbvuWwkeeUu+S6huS4gOS4que7tOW6pilgKSksbWR4KCJoMyIseyJpZCI6IumhueebruWunueOsCJ9LGDpobnnm67lrp7njrBgKSxtZHgoInAiLG51bGwsYFRleHRDTk4g55qE572R57uc57uT5p6E77yaYCksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiLi4vaW1nL1RleHRDTk5fbmV0d29ya19zdHJ1Y3R1cmUucG5nIiwiYWx0IjoicG5nIn0pKSksbWR4KCJoMiIseyJpZCI6IuaooeWei+aehOW7uuS4juiuree7gyJ9LGDmqKHlnovmnoTlu7rkuI7orq3nu4NgKSxtZHgoImgzIix7ImlkIjoiMeWumuS5iee9kee7nOe7k+aehCJ9LGAxLuWumuS5iee9kee7nOe7k+aehGApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLGBmcm9tIHRlbnNvcmZsb3cua2VyYXMgaW1wb3J0IElucHV0LCBNb2RlbApmcm9tIHRlbnNvcmZsb3cua2VyYXMubGF5ZXJzIGltcG9ydCBFbWJlZGRpbmcsIERlbnNlLCBDb252MUQsIEdsb2JhbE1heFBvb2xpbmcxRCwgQ29uY2F0ZW5hdGUsIERyb3BvdXQKCiPph43opoHlj4LmlbDop6Pph4oKI21heGxlbjrlj6XlrZDmnIDlpKfplb/luqYKI21heF9mZWF0dXJlczror43lhbjmnIDlpKfmlbDph48KIyBlbWJlZGluZ19kaW1zOuivjeWQkemHj+e7tOW6puaVsAojY2xhc3NfbnVtOiDliIbnsbvmlbAKI2xhc3RfYWN0aXZhdGlvbjrmv4DmtLvlh73mlbAKCmNsYXNzIFRleHRDTk4ob2JqZWN0KToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBtYXhsZW4sIG1heF9mZWF0dXJlcywgZW1iZWRkaW5nX2RpbXMsCiAgICAgICAgICAgICAgICAgY2xhc3NfbnVtPTUsCiAgICAgICAgICAgICAgICAgbGFzdF9hY3RpdmF0aW9uPSdzb2Z0bWF4Jyk6CiAgICAgICAgc2VsZi5tYXhsZW4gPSBtYXhsZW4KICAgICAgICBzZWxmLm1heF9mZWF0dXJlcyA9IG1heF9mZWF0dXJlcwogICAgICAgIHNlbGYuZW1iZWRkaW5nX2RpbXMgPSBlbWJlZGRpbmdfZGltcwogICAgICAgIHNlbGYuY2xhc3NfbnVtID0gY2xhc3NfbnVtCiAgICAgICAgc2VsZi5sYXN0X2FjdGl2YXRpb24gPSBsYXN0X2FjdGl2YXRpb24KCiAgICBkZWYgZ2V0X21vZGVsKHNlbGYpOgogICAgICAgIGlucHV0ID0gSW5wdXQoKHNlbGYubWF4bGVuLCkpCiAgICAgICAgZW1iZWRkaW5nID0gRW1iZWRkaW5nKHNlbGYubWF4X2ZlYXR1cmVzLCBzZWxmLmVtYmVkZGluZ19kaW1zLCBpbnB1dF9sZW5ndGg9c2VsZi5tYXhsZW4pKGlucHV0KQogICAgICAgIGNvbnZzID0gW10KICAgICAgICBmb3Iga2VybmVsX3NpemUgaW4gWzMsIDQsIDVdOgogICAgICAgICAgICBjID0gQ29udjFEKDEyOCwga2VybmVsX3NpemUsIGFjdGl2YXRpb249J3JlbHUnKShlbWJlZGRpbmcpCiAgICAgICAgICAgIGMgPSBHbG9iYWxNYXhQb29saW5nMUQoKShjKQogICAgICAgICAgICBjb252cy5hcHBlbmQoYykKICAgICAgICB4ID0gQ29uY2F0ZW5hdGUoKShjb252cykKCiAgICAgICAgb3V0cHV0ID0gRGVuc2Uoc2VsZi5jbGFzc19udW0sIGFjdGl2YXRpb249c2VsZi5sYXN0X2FjdGl2YXRpb24pKHgpCiAgICAgICAgbW9kZWwgPSBNb2RlbChpbnB1dHM9aW5wdXQsIG91dHB1dHM9b3V0cHV0KQogICAgICAgIHJldHVybiBtb2RlbApgKSksbWR4KCJoMyIseyJpZCI6IjLmlbDmja7lpITnkIbkuI7orq3nu4MifSxgMi7mlbDmja7lpITnkIbkuI7orq3nu4NgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5dGhvbiJ9KSxgZnJvbSB0ZW5zb3JmbG93LmtlcmFzLnByZXByb2Nlc3NpbmcgaW1wb3J0IHNlcXVlbmNlCmltcG9ydCByYW5kb20KZnJvbSBza2xlYXJuLm1vZGVsX3NlbGVjdGlvbiBpbXBvcnQgdHJhaW5fdGVzdF9zcGxpdApmcm9tIHRlbnNvcmZsb3cua2VyYXMuY2FsbGJhY2tzIGltcG9ydCBFYXJseVN0b3BwaW5nLCBNb2RlbENoZWNrcG9pbnQKZnJvbSB0ZW5zb3JmbG93LmtlcmFzLnV0aWxzIGltcG9ydCB0b19jYXRlZ29yaWNhbApmcm9tIHV0aWxzIGltcG9ydCAqCgojIOi3r+W+hOetiemFjee9rgpkYXRhX2RpciA9ICIuL3Byb2Nlc3NlZF9kYXRhIgp2b2NhYl9maWxlID0gIi4vdm9jYWIvdm9jYWIudHh0Igp2b2NhYl9zaXplID0gNDAwMDAKCiMg56We57uP572R57uc6YWN572uCm1heF9mZWF0dXJlcyA9IDQwMDAxCm1heGxlbiA9IDEwMApiYXRjaF9zaXplID0gNjQKZW1iZWRkaW5nX2RpbXMgPSA1MAplcG9jaHMgPSA4CgpwcmludCgn5pWw5o2u6aKE5aSE55CG5LiO5Yqg6L295pWw5o2uLi4uJykKIyDlpoLmnpzkuI3lrZjlnKjor43msYfooajvvIzph43lu7oKaWYgbm90IG9zLnBhdGguZXhpc3RzKHZvY2FiX2ZpbGUpOiAgCiAgICBidWlsZF92b2NhYihkYXRhX2Rpciwgdm9jYWJfZmlsZSwgdm9jYWJfc2l6ZSkKIyDojrflvpcg6K+N5rGHL+exu+WIqyDkuI5pZOaYoOWwhOWtl+WFuApjYXRlZ29yaWVzLCBjYXRfdG9faWQgPSByZWFkX2NhdGVnb3J5KCkKd29yZHMsIHdvcmRfdG9faWQgPSByZWFkX3ZvY2FiKHZvY2FiX2ZpbGUpCgojIOWFqOmDqOaVsOaNrgp4LCB5ID0gcmVhZF9maWxlcyhkYXRhX2RpcikKZGF0YSA9IGxpc3QoemlwKHgseSkpCmRlbCB4LHkKIyDkubHluo8KcmFuZG9tLnNodWZmbGUoZGF0YSkKIyDliIfliIborq3nu4Ppm4blkozmtYvor5Xpm4YKdHJhaW5fZGF0YSwgdGVzdF9kYXRhID0gdHJhaW5fdGVzdF9zcGxpdChkYXRhKQojIOWvueaWh+acrOeahOivjWlk5ZKM57G75YiraWTov5vooYznvJbnoIEKeF90cmFpbiA9IGVuY29kZV9zZW50ZW5jZXMoW2NvbnRlbnRbMF0gZm9yIGNvbnRlbnQgaW4gdHJhaW5fZGF0YV0sIHdvcmRfdG9faWQpCnlfdHJhaW4gPSB0b19jYXRlZ29yaWNhbChlbmNvZGVfY2F0ZShbY29udGVudFsxXSBmb3IgY29udGVudCBpbiB0cmFpbl9kYXRhXSwgY2F0X3RvX2lkKSkKeF90ZXN0ID0gZW5jb2RlX3NlbnRlbmNlcyhbY29udGVudFswXSBmb3IgY29udGVudCBpbiB0ZXN0X2RhdGFdLCB3b3JkX3RvX2lkKQp5X3Rlc3QgPSB0b19jYXRlZ29yaWNhbChlbmNvZGVfY2F0ZShbY29udGVudFsxXSBmb3IgY29udGVudCBpbiB0ZXN0X2RhdGFdLCBjYXRfdG9faWQpKQoKcHJpbnQoJ+WvueW6j+WIl+WBmnBhZGRpbmfvvIzkv53or4HmmK8gc2FtcGxlcyp0aW1lc3RlcCDnmoTnu7TluqYnKQp4X3RyYWluID0gc2VxdWVuY2UucGFkX3NlcXVlbmNlcyh4X3RyYWluLCBtYXhsZW49bWF4bGVuKQp4X3Rlc3QgPSBzZXF1ZW5jZS5wYWRfc2VxdWVuY2VzKHhfdGVzdCwgbWF4bGVuPW1heGxlbikKcHJpbnQoJ3hfdHJhaW4gc2hhcGU6JywgeF90cmFpbi5zaGFwZSkKcHJpbnQoJ3hfdGVzdCBzaGFwZTonLCB4X3Rlc3Quc2hhcGUpCgpwcmludCgn5p6E5bu65qih5Z6LLi4uJykKbW9kZWwgPSBUZXh0Q05OKG1heGxlbiwgbWF4X2ZlYXR1cmVzLCBlbWJlZGRpbmdfZGltcykuZ2V0X21vZGVsKCkKbW9kZWwuY29tcGlsZSgnYWRhbScsICdjYXRlZ29yaWNhbF9jcm9zc2VudHJvcHknLCBtZXRyaWNzPVsnYWNjdXJhY3knXSkKCnByaW50KCforq3nu4MuLi4nKQojIOiuvuWummNhbGxiYWNrc+Wbnuiwg+WHveaVsApteV9jYWxsYmFja3MgPSBbCiAgICBNb2RlbENoZWNrcG9pbnQoJy4vY25uX21vZGVsLmg1JywgdmVyYm9zZT0xKSwKICAgIEVhcmx5U3RvcHBpbmcobW9uaXRvcj0ndmFsX2FjY3VyYWN5JywgcGF0aWVuY2U9MiwgbW9kZT0nbWF4JykKXQoKIyBmaXTmi5/lkIjmlbDmja4KaGlzdG9yeSA9IG1vZGVsLmZpdCh4X3RyYWluLCB5X3RyYWluLAogICAgICAgICAgYmF0Y2hfc2l6ZT1iYXRjaF9zaXplLAogICAgICAgICAgZXBvY2hzPWVwb2NocywKICAgICAgICAgIGNhbGxiYWNrcz1teV9jYWxsYmFja3MsCiAgICAgICAgICB2YWxpZGF0aW9uX2RhdGE9KHhfdGVzdCwgeV90ZXN0KSkKCiNwcmludCgn5a+55rWL6K+V6ZuG6aKE5rWLLi4uJykKI3Jlc3VsdCA9IG1vZGVsLnByZWRpY3QoeF90ZXN0KQpgKSksbWR4KCJoMyIseyJpZCI6IjPorq3nu4PkuK3pl7Tkv6Hmga/ovpPlh7oifSxgMy7orq3nu4PkuK3pl7Tkv6Hmga/ovpPlh7pgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5dGhvbiJ9KSxgaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdApwbHQuc3dpdGNoX2JhY2tlbmQoJ2FnZycpCiVtYXRwbG90bGliIGlubGluZQoKZmlnMSA9IHBsdC5maWd1cmUoKQpwbHQucGxvdChoaXN0b3J5Lmhpc3RvcnlbJ2xvc3MnXSwncicsbGluZXdpZHRoPTMuMCkKcGx0LnBsb3QoaGlzdG9yeS5oaXN0b3J5Wyd2YWxfbG9zcyddLCdiJyxsaW5ld2lkdGg9My4wKQpwbHQubGVnZW5kKFsnVHJhaW5pbmcgbG9zcycsICdWYWxpZGF0aW9uIExvc3MnXSxmb250c2l6ZT0xOCkKcGx0LnhsYWJlbCgnRXBvY2hzICcsZm9udHNpemU9MTYpCnBsdC55bGFiZWwoJ0xvc3MnLGZvbnRzaXplPTE2KQpwbHQudGl0bGUoJ0xvc3MgQ3VydmVzIDpDTk4nLGZvbnRzaXplPTE2KQpmaWcxLnNhdmVmaWcoJ2xvc3NfY25uLnBuZycpCnBsdC5zaG93KCkKYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii4uL2ltZy9vdXRwdXRfOF8wLnBuZyIsImFsdCI6InBuZyJ9KSkpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLGBmaWcyPXBsdC5maWd1cmUoKQpwbHQucGxvdChoaXN0b3J5Lmhpc3RvcnlbJ2FjYyddLCdyJyxsaW5ld2lkdGg9My4wKQpwbHQucGxvdChoaXN0b3J5Lmhpc3RvcnlbJ3ZhbF9hY2MnXSwnYicsbGluZXdpZHRoPTMuMCkKcGx0LmxlZ2VuZChbJ1RyYWluaW5nIEFjY3VyYWN5JywgJ1ZhbGlkYXRpb24gQWNjdXJhY3knXSxmb250c2l6ZT0xOCkKcGx0LnhsYWJlbCgnRXBvY2hzICcsZm9udHNpemU9MTYpCnBsdC55bGFiZWwoJ0FjY3VyYWN5Jyxmb250c2l6ZT0xNikKcGx0LnRpdGxlKCdBY2N1cmFjeSBDdXJ2ZXMgOiBDTk4nLGZvbnRzaXplPTE2KQpmaWcyLnNhdmVmaWcoJ2FjY3VyYWN5X2Nubi5wbmcnKQpwbHQuc2hvdygpCmApKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIuLi9pbWcvb3V0cHV0XzlfMC5wbmciLCJhbHQiOiJwbmcifSkpKSxtZHgoImgzIix7ImlkIjoiNOaooeWei+e7k+aehOaJk+WNsCJ9LGA0LuaooeWei+e7k+aehOaJk+WNsGApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLGBmcm9tIHRlbnNvcmZsb3cua2VyYXMudXRpbHMgaW1wb3J0IHBsb3RfbW9kZWwKcGxvdF9tb2RlbChtb2RlbCwgc2hvd19zaGFwZXM9VHJ1ZSwgc2hvd19sYXllcl9uYW1lcz1UcnVlKQpgKSksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiLi4vaW1nL0NOTl9zdHJ1Y3R1cmUucG5nIiwiYWx0IjoicG5nIn0pKSksbWR4KCJoMyIseyJpZCI6IjXmqKHlnovlr7zlh7oifSxgNS7mqKHlnovlr7zlh7pgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5dGhvbiJ9KSxgaW1wb3J0IHRlbnNvcmZsb3cgYXMgdGYKaW1wb3J0IHNodXRpbCAKbW9kZWwgPSB0Zi5rZXJhcy5tb2RlbHMubG9hZF9tb2RlbCgnLi9jbm5fbW9kZWwuaDUnKQpgKSksbWR4KCJoMyIseyJpZCI6IjbpooTmtYvmqKHlnosifSxgNi7pooTmtYvmqKHlnotgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5dGhvbiJ9KSxgaW1wb3J0IGppZWJhCnRleHQgPSAi5p2o5bmC5aW95ryC5LquLOWPkeeUn+WOn+WtkOW8uSIKcHJpbnQoamllYmEubGN1dCh0ZXh0KSkKdGV4dF9zZWcgPSBlbmNvZGVfc2VudGVuY2VzKFtqaWViYS5sY3V0KHRleHQpXSwgd29yZF90b19pZCkKdGV4dF9pbnB1dCA9IHNlcXVlbmNlLnBhZF9zZXF1ZW5jZXModGV4dF9zZWcsIG1heGxlbj1tYXhsZW4pCnByaW50KG1vZGVsLnByZWRpY3QodGV4dF9pbnB1dCkpCmApKSxtZHgoImgzIix7ImlkIjoiN+WJjeWQjuerr+e7k+WQiGRvY2tlcumDqOe9siJ9LGA3LuWJjeWQjuerr+e7k+WQiCtkb2NrZXLpg6jnvbJgKSxtZHgoInAiLG51bGwsYOmhueebrmRlbW/vvJpkb2NrZXLpg6jnvbLpk77mjqU6YCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yZXBvc2l0b3J5L2RvY2tlci9mbHliaXJkZ3JvdXAvY2xhc3NpZmllciJ9KSxg5Lit5paH5paw6Ze75aSa5YiG57G7ZGVtb2ApKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBkb2NrZXLlkK/liqjlkb3ku6RgKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1weXRob24ifSksYGRvY2tlciBydW4gLXAgMTI3LjAuMC4xOjgwOjUwMDAvdGNwIGZseWJpcmRncm91cC9jbGFzc2lmaWVyCmApKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIuLi9pbWcvZG9ja2VyMS5wbmciLCJhbHQiOiJwbmcifSkpKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIuLi9pbWcvZG9ja2VyMi5wbmciLCJhbHQiOiJwbmcifSkpKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md"],"names":["React","mdx","frontMatter","id","title","author","author_title","author_url","author_image_url","tags","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'welcome',\n\ttitle: 'Welcome',\n\tauthor: '招晓贤',\n\tauthor_title: 'AI Engineer',\n\tauthor_url: 'https://github.com/flybirdgroup',\n\tauthor_image_url: 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg',\n\ttags: [\n\t\t'facebook',\n\t\t'hello',\n\t\t'docusaurus'\n\t]\n};\nexport const metadata = {\n  \"permalink\": \"/blog/welcome\",\n  \"source\": \"@site/blog/2020-3-18-textCNN.md\",\n  \"description\": \"# 菜鸟也能玩转NLP-卷积神经网络文本分类\",\n  \"date\": \"2020-03-17T16:00:00.000Z\",\n  \"tags\": [\n    {\n      \"label\": \"facebook\",\n      \"permalink\": \"/blog/tags/facebook\"\n    },\n    {\n      \"label\": \"hello\",\n      \"permalink\": \"/blog/tags/hello\"\n    },\n    {\n      \"label\": \"docusaurus\",\n      \"permalink\": \"/blog/tags/docusaurus\"\n    }\n  ],\n  \"title\": \"Welcome\",\n  \"truncated\": true,\n  \"prevItem\": {\n    \"title\": \"What is google cloud\",\n    \"permalink\": \"/blog/hello_world\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '原理讲解',\n  id: '原理讲解',\n  children: [{\n    value: '论文核心点',\n    id: '论文核心点',\n    children: []\n  }, {\n    value: 'TextCNN基础知识',\n    id: 'textcnn基础知识',\n    children: []\n  }, {\n    value: '项目实现',\n    id: '项目实现',\n    children: []\n  }]\n}, {\n  value: '模型构建与训练',\n  id: '模型构建与训练',\n  children: [{\n    value: '1.定义网络结构',\n    id: '1定义网络结构',\n    children: []\n  }, {\n    value: '2.数据处理与训练',\n    id: '2数据处理与训练',\n    children: []\n  }, {\n    value: '3.训练中间信息输出',\n    id: '3训练中间信息输出',\n    children: []\n  }, {\n    value: '4.模型结构打印',\n    id: '4模型结构打印',\n    children: []\n  }, {\n    value: '5.模型导出',\n    id: '5模型导出',\n    children: []\n  }, {\n    value: '6.预测模型',\n    id: '6预测模型',\n    children: []\n  }, {\n    value: '7.前后端结合+docker部署',\n    id: '7前后端结合docker部署',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"菜鸟也能玩转nlp-卷积神经网络文本分类\"\n    }}>{`菜鸟也能玩转NLP-卷积神经网络文本分类`}</h1>\n    <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"https://my-website-six.now.sh/\"\n        }}>{`云润人工智能部门`}</a>{`《NLP零基础快速上手教程》课程资料 by `}<a parentName=\"strong\" {...{\n          \"href\": \"https://github.com/flybirdgroup\"\n        }}>{`算法工程师:招晓贤`}</a></strong></p>\n    {\n      /*truncate*/\n    }\n    <h1 {...{\n      \"id\": \"菜鸟也能玩转nlp-卷积神经网络文本分类-1\"\n    }}>{`菜鸟也能玩转NLP-卷积神经网络文本分类`}</h1>\n    <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"https://my-website-six.now.sh/\"\n        }}>{`云润人工智能部门`}</a>{`《NLP零基础快速上手教程》课程资料 by `}<a parentName=\"strong\" {...{\n          \"href\": \"https://github.com/flybirdgroup\"\n        }}>{`算法工程师:招晓贤`}</a></strong></p>\n    <h2 {...{\n      \"id\": \"原理讲解\"\n    }}>{`原理讲解`}</h2>\n    <p>{`TextCNN出处：论文`}<a parentName=\"p\" {...{\n        \"href\": \"http://www.aclweb.org/anthology/D14-1181\"\n      }}>{`Convolutional Neural Networks for Sentence Classification`}</a></p>\n    <h3 {...{\n      \"id\": \"论文核心点\"\n    }}>{`论文核心点`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../img/TextCNN.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <ol>\n      <li parentName=\"ol\">{`Represent sentence with `}<strong parentName=\"li\">{`static and non-static channels`}</strong>{`.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Convolve`}</strong>{` with multiple filter widths and feature maps.`}</li>\n      <li parentName=\"ol\">{`Use `}<strong parentName=\"li\">{`max-over-time pooling`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Use `}<strong parentName=\"li\">{`fully connected layer`}</strong>{` with `}<strong parentName=\"li\">{`dropout`}</strong>{` and `}<strong parentName=\"li\">{`softmax`}</strong>{` ouput.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"textcnn基础知识\"\n    }}>{`TextCNN基础知识`}</h3>\n    <h4 {...{\n      \"id\": \"词向量\"\n    }}>{`词向量`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`随机初始化`}</li>\n      <li parentName=\"ol\">{`预训练词向量进行初始化,在训练过程中固定(CNN-static),注意与图像CNN的不同`}</li>\n      <li parentName=\"ol\">{`预训练词向量进行初始化,在训练过程中微调(CNN-non-static)`}</li>\n      <li parentName=\"ol\">{`多通道(CNN-multichannel):将固定的预训练词向量和微调的词向量分别作为一个通道(channel),卷积操作同时在两个通道上进行,可以类比图像RGB三通道`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"详细说明\"\n    }}>{`详细说明`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`上图的图片为例,句子长度为n=9,词向量维度k为6,filter有两种窗口大小,每种有2个,所以filter有4个.`}</li>\n      <li parentName=\"ol\">{`红色框的为h=2,卷积后的向量维度为n-h+1=9-2+1=8`}</li>\n      <li parentName=\"ol\">{`黄色框h=3,卷积后的向量维度是n-h+1=9-3+1=7 (论文原图少画了一个维度)`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"项目实现\"\n    }}>{`项目实现`}</h3>\n    <p>{`TextCNN 的网络结构：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../img/TextCNN_network_structure.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"模型构建与训练\"\n    }}>{`模型构建与训练`}</h2>\n    <h3 {...{\n      \"id\": \"1定义网络结构\"\n    }}>{`1.定义网络结构`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from tensorflow.keras import Input, Model\nfrom tensorflow.keras.layers import Embedding, Dense, Conv1D, GlobalMaxPooling1D, Concatenate, Dropout\n\n#重要参数解释\n#maxlen:句子最大长度\n#max_features:词典最大数量\n# embeding_dims:词向量维度数\n#class_num: 分类数\n#last_activation:激活函数\n\nclass TextCNN(object):\n    def __init__(self, maxlen, max_features, embedding_dims,\n                 class_num=5,\n                 last_activation='softmax'):\n        self.maxlen = maxlen\n        self.max_features = max_features\n        self.embedding_dims = embedding_dims\n        self.class_num = class_num\n        self.last_activation = last_activation\n\n    def get_model(self):\n        input = Input((self.maxlen,))\n        embedding = Embedding(self.max_features, self.embedding_dims, input_length=self.maxlen)(input)\n        convs = []\n        for kernel_size in [3, 4, 5]:\n            c = Conv1D(128, kernel_size, activation='relu')(embedding)\n            c = GlobalMaxPooling1D()(c)\n            convs.append(c)\n        x = Concatenate()(convs)\n\n        output = Dense(self.class_num, activation=self.last_activation)(x)\n        model = Model(inputs=input, outputs=output)\n        return model\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2数据处理与训练\"\n    }}>{`2.数据处理与训练`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from tensorflow.keras.preprocessing import sequence\nimport random\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\nfrom tensorflow.keras.utils import to_categorical\nfrom utils import *\n\n# 路径等配置\ndata_dir = \"./processed_data\"\nvocab_file = \"./vocab/vocab.txt\"\nvocab_size = 40000\n\n# 神经网络配置\nmax_features = 40001\nmaxlen = 100\nbatch_size = 64\nembedding_dims = 50\nepochs = 8\n\nprint('数据预处理与加载数据...')\n# 如果不存在词汇表，重建\nif not os.path.exists(vocab_file):  \n    build_vocab(data_dir, vocab_file, vocab_size)\n# 获得 词汇/类别 与id映射字典\ncategories, cat_to_id = read_category()\nwords, word_to_id = read_vocab(vocab_file)\n\n# 全部数据\nx, y = read_files(data_dir)\ndata = list(zip(x,y))\ndel x,y\n# 乱序\nrandom.shuffle(data)\n# 切分训练集和测试集\ntrain_data, test_data = train_test_split(data)\n# 对文本的词id和类别id进行编码\nx_train = encode_sentences([content[0] for content in train_data], word_to_id)\ny_train = to_categorical(encode_cate([content[1] for content in train_data], cat_to_id))\nx_test = encode_sentences([content[0] for content in test_data], word_to_id)\ny_test = to_categorical(encode_cate([content[1] for content in test_data], cat_to_id))\n\nprint('对序列做padding，保证是 samples*timestep 的维度')\nx_train = sequence.pad_sequences(x_train, maxlen=maxlen)\nx_test = sequence.pad_sequences(x_test, maxlen=maxlen)\nprint('x_train shape:', x_train.shape)\nprint('x_test shape:', x_test.shape)\n\nprint('构建模型...')\nmodel = TextCNN(maxlen, max_features, embedding_dims).get_model()\nmodel.compile('adam', 'categorical_crossentropy', metrics=['accuracy'])\n\nprint('训练...')\n# 设定callbacks回调函数\nmy_callbacks = [\n    ModelCheckpoint('./cnn_model.h5', verbose=1),\n    EarlyStopping(monitor='val_accuracy', patience=2, mode='max')\n]\n\n# fit拟合数据\nhistory = model.fit(x_train, y_train,\n          batch_size=batch_size,\n          epochs=epochs,\n          callbacks=my_callbacks,\n          validation_data=(x_test, y_test))\n\n#print('对测试集预测...')\n#result = model.predict(x_test)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3训练中间信息输出\"\n    }}>{`3.训练中间信息输出`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import matplotlib.pyplot as plt\nplt.switch_backend('agg')\n%matplotlib inline\n\nfig1 = plt.figure()\nplt.plot(history.history['loss'],'r',linewidth=3.0)\nplt.plot(history.history['val_loss'],'b',linewidth=3.0)\nplt.legend(['Training loss', 'Validation Loss'],fontsize=18)\nplt.xlabel('Epochs ',fontsize=16)\nplt.ylabel('Loss',fontsize=16)\nplt.title('Loss Curves :CNN',fontsize=16)\nfig1.savefig('loss_cnn.png')\nplt.show()\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../img/output_8_0.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`fig2=plt.figure()\nplt.plot(history.history['acc'],'r',linewidth=3.0)\nplt.plot(history.history['val_acc'],'b',linewidth=3.0)\nplt.legend(['Training Accuracy', 'Validation Accuracy'],fontsize=18)\nplt.xlabel('Epochs ',fontsize=16)\nplt.ylabel('Accuracy',fontsize=16)\nplt.title('Accuracy Curves : CNN',fontsize=16)\nfig2.savefig('accuracy_cnn.png')\nplt.show()\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../img/output_9_0.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"4模型结构打印\"\n    }}>{`4.模型结构打印`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from tensorflow.keras.utils import plot_model\nplot_model(model, show_shapes=True, show_layer_names=True)\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../img/CNN_structure.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"5模型导出\"\n    }}>{`5.模型导出`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import tensorflow as tf\nimport shutil \nmodel = tf.keras.models.load_model('./cnn_model.h5')\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"6预测模型\"\n    }}>{`6.预测模型`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import jieba\ntext = \"杨幂好漂亮,发生原子弹\"\nprint(jieba.lcut(text))\ntext_seg = encode_sentences([jieba.lcut(text)], word_to_id)\ntext_input = sequence.pad_sequences(text_seg, maxlen=maxlen)\nprint(model.predict(text_input))\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"7前后端结合docker部署\"\n    }}>{`7.前后端结合+docker部署`}</h3>\n    <p>{`项目demo：docker部署链接:`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/repository/docker/flybirdgroup/classifier\"\n      }}>{`中文新闻多分类demo`}</a></p>\n    <p><inlineCode parentName=\"p\">{`docker启动命令`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`docker run -p 127.0.0.1:80:5000/tcp flybirdgroup/classifier\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../img/docker1.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../img/docker2.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}