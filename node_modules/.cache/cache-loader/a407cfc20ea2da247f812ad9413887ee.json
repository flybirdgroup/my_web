{"remainingRequest":"/Users/flybird/Desktop/my-website/my_web/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js??ref--8-3!/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md","dependencies":[{"path":"/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md","mtime":1584588923362},{"path":"/Users/flybird/Desktop/my-website/my_web/.docusaurus/docusaurus-plugin-content-blog/site-blog-2020-3-18-text-cnn-md-ecd.json","mtime":1584598669622},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/cache-loader/dist/cjs.js","mtime":1584175948726},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/babel-loader/lib/index.js","mtime":1584175949112},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1584175972076},{"path":"/Users/flybird/Desktop/my-website/my_web/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js","mtime":1584175971523}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/flybird/Desktop/my-website/my_web/blog/2020-3-18-textCNN.md"],"names":["React","mdx","frontMatter","id","title","author","author_title","author_url","author_image_url","tags","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'welcome',\n\ttitle: 'Welcome',\n\tauthor: '招晓贤',\n\tauthor_title: 'AI Engineer',\n\tauthor_url: 'https://github.com/flybirdgroup',\n\tauthor_image_url: 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg',\n\ttags: [\n\t\t'facebook',\n\t\t'hello',\n\t\t'docusaurus'\n\t]\n};\nexport const metadata = {\n  \"permalink\": \"/blog/welcome\",\n  \"source\": \"@site/blog/2020-3-18-textCNN.md\",\n  \"description\": \"# 菜鸟也能玩转NLP-卷积神经网络文本分类\",\n  \"date\": \"2020-03-17T16:00:00.000Z\",\n  \"tags\": [\n    {\n      \"label\": \"facebook\",\n      \"permalink\": \"/blog/tags/facebook\"\n    },\n    {\n      \"label\": \"hello\",\n      \"permalink\": \"/blog/tags/hello\"\n    },\n    {\n      \"label\": \"docusaurus\",\n      \"permalink\": \"/blog/tags/docusaurus\"\n    }\n  ],\n  \"title\": \"Welcome\",\n  \"truncated\": true,\n  \"prevItem\": {\n    \"title\": \"What is google cloud\",\n    \"permalink\": \"/blog/hello_world\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '原理讲解',\n  id: '原理讲解',\n  children: [{\n    value: '论文核心点',\n    id: '论文核心点',\n    children: []\n  }, {\n    value: 'TextCNN基础知识',\n    id: 'textcnn基础知识',\n    children: []\n  }, {\n    value: '项目实现',\n    id: '项目实现',\n    children: []\n  }]\n}, {\n  value: '模型构建与训练',\n  id: '模型构建与训练',\n  children: [{\n    value: '1.定义网络结构',\n    id: '1定义网络结构',\n    children: []\n  }, {\n    value: '2.数据处理与训练',\n    id: '2数据处理与训练',\n    children: []\n  }, {\n    value: '3.训练中间信息输出',\n    id: '3训练中间信息输出',\n    children: []\n  }, {\n    value: '4.模型结构打印',\n    id: '4模型结构打印',\n    children: []\n  }, {\n    value: '5.模型导出',\n    id: '5模型导出',\n    children: []\n  }, {\n    value: '6.预测模型',\n    id: '6预测模型',\n    children: []\n  }, {\n    value: '7.前后端结合+docker部署',\n    id: '7前后端结合docker部署',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"菜鸟也能玩转nlp-卷积神经网络文本分类\"\n    }}>{`菜鸟也能玩转NLP-卷积神经网络文本分类`}</h1>\n    <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"https://my-website-six.now.sh/\"\n        }}>{`云润人工智能部门`}</a>{`《NLP零基础快速上手教程》课程资料 by `}<a parentName=\"strong\" {...{\n          \"href\": \"https://github.com/flybirdgroup\"\n        }}>{`算法工程师:招晓贤`}</a></strong></p>\n    {\n      /*truncate*/\n    }\n    <h1 {...{\n      \"id\": \"菜鸟也能玩转nlp-卷积神经网络文本分类-1\"\n    }}>{`菜鸟也能玩转NLP-卷积神经网络文本分类`}</h1>\n    <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"https://my-website-six.now.sh/\"\n        }}>{`云润人工智能部门`}</a>{`《NLP零基础快速上手教程》课程资料 by `}<a parentName=\"strong\" {...{\n          \"href\": \"https://github.com/flybirdgroup\"\n        }}>{`算法工程师:招晓贤`}</a></strong></p>\n    <h2 {...{\n      \"id\": \"原理讲解\"\n    }}>{`原理讲解`}</h2>\n    <p>{`TextCNN出处：论文`}<a parentName=\"p\" {...{\n        \"href\": \"http://www.aclweb.org/anthology/D14-1181\"\n      }}>{`Convolutional Neural Networks for Sentence Classification`}</a></p>\n    <h3 {...{\n      \"id\": \"论文核心点\"\n    }}>{`论文核心点`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../static/img/TextCNN.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <ol>\n      <li parentName=\"ol\">{`Represent sentence with `}<strong parentName=\"li\">{`static and non-static channels`}</strong>{`.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Convolve`}</strong>{` with multiple filter widths and feature maps.`}</li>\n      <li parentName=\"ol\">{`Use `}<strong parentName=\"li\">{`max-over-time pooling`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Use `}<strong parentName=\"li\">{`fully connected layer`}</strong>{` with `}<strong parentName=\"li\">{`dropout`}</strong>{` and `}<strong parentName=\"li\">{`softmax`}</strong>{` ouput.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"textcnn基础知识\"\n    }}>{`TextCNN基础知识`}</h3>\n    <h4 {...{\n      \"id\": \"词向量\"\n    }}>{`词向量`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`随机初始化`}</li>\n      <li parentName=\"ol\">{`预训练词向量进行初始化,在训练过程中固定(CNN-static),注意与图像CNN的不同`}</li>\n      <li parentName=\"ol\">{`预训练词向量进行初始化,在训练过程中微调(CNN-non-static)`}</li>\n      <li parentName=\"ol\">{`多通道(CNN-multichannel):将固定的预训练词向量和微调的词向量分别作为一个通道(channel),卷积操作同时在两个通道上进行,可以类比图像RGB三通道`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"详细说明\"\n    }}>{`详细说明`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`上图的图片为例,句子长度为n=9,词向量维度k为6,filter有两种窗口大小,每种有2个,所以filter有4个.`}</li>\n      <li parentName=\"ol\">{`红色框的为h=2,卷积后的向量维度为n-h+1=9-2+1=8`}</li>\n      <li parentName=\"ol\">{`黄色框h=3,卷积后的向量维度是n-h+1=9-3+1=7 (论文原图少画了一个维度)`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"项目实现\"\n    }}>{`项目实现`}</h3>\n    <p>{`TextCNN 的网络结构：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../static/img/TextCNN_network_structure.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"模型构建与训练\"\n    }}>{`模型构建与训练`}</h2>\n    <h3 {...{\n      \"id\": \"1定义网络结构\"\n    }}>{`1.定义网络结构`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from tensorflow.keras import Input, Model\nfrom tensorflow.keras.layers import Embedding, Dense, Conv1D, GlobalMaxPooling1D, Concatenate, Dropout\n\n#重要参数解释\n#maxlen:句子最大长度\n#max_features:词典最大数量\n# embeding_dims:词向量维度数\n#class_num: 分类数\n#last_activation:激活函数\n\nclass TextCNN(object):\n    def __init__(self, maxlen, max_features, embedding_dims,\n                 class_num=5,\n                 last_activation='softmax'):\n        self.maxlen = maxlen\n        self.max_features = max_features\n        self.embedding_dims = embedding_dims\n        self.class_num = class_num\n        self.last_activation = last_activation\n\n    def get_model(self):\n        input = Input((self.maxlen,))\n        embedding = Embedding(self.max_features, self.embedding_dims, input_length=self.maxlen)(input)\n        convs = []\n        for kernel_size in [3, 4, 5]:\n            c = Conv1D(128, kernel_size, activation='relu')(embedding)\n            c = GlobalMaxPooling1D()(c)\n            convs.append(c)\n        x = Concatenate()(convs)\n\n        output = Dense(self.class_num, activation=self.last_activation)(x)\n        model = Model(inputs=input, outputs=output)\n        return model\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2数据处理与训练\"\n    }}>{`2.数据处理与训练`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from tensorflow.keras.preprocessing import sequence\nimport random\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\nfrom tensorflow.keras.utils import to_categorical\nfrom utils import *\n\n# 路径等配置\ndata_dir = \"./processed_data\"\nvocab_file = \"./vocab/vocab.txt\"\nvocab_size = 40000\n\n# 神经网络配置\nmax_features = 40001\nmaxlen = 100\nbatch_size = 64\nembedding_dims = 50\nepochs = 8\n\nprint('数据预处理与加载数据...')\n# 如果不存在词汇表，重建\nif not os.path.exists(vocab_file):  \n    build_vocab(data_dir, vocab_file, vocab_size)\n# 获得 词汇/类别 与id映射字典\ncategories, cat_to_id = read_category()\nwords, word_to_id = read_vocab(vocab_file)\n\n# 全部数据\nx, y = read_files(data_dir)\ndata = list(zip(x,y))\ndel x,y\n# 乱序\nrandom.shuffle(data)\n# 切分训练集和测试集\ntrain_data, test_data = train_test_split(data)\n# 对文本的词id和类别id进行编码\nx_train = encode_sentences([content[0] for content in train_data], word_to_id)\ny_train = to_categorical(encode_cate([content[1] for content in train_data], cat_to_id))\nx_test = encode_sentences([content[0] for content in test_data], word_to_id)\ny_test = to_categorical(encode_cate([content[1] for content in test_data], cat_to_id))\n\nprint('对序列做padding，保证是 samples*timestep 的维度')\nx_train = sequence.pad_sequences(x_train, maxlen=maxlen)\nx_test = sequence.pad_sequences(x_test, maxlen=maxlen)\nprint('x_train shape:', x_train.shape)\nprint('x_test shape:', x_test.shape)\n\nprint('构建模型...')\nmodel = TextCNN(maxlen, max_features, embedding_dims).get_model()\nmodel.compile('adam', 'categorical_crossentropy', metrics=['accuracy'])\n\nprint('训练...')\n# 设定callbacks回调函数\nmy_callbacks = [\n    ModelCheckpoint('./cnn_model.h5', verbose=1),\n    EarlyStopping(monitor='val_accuracy', patience=2, mode='max')\n]\n\n# fit拟合数据\nhistory = model.fit(x_train, y_train,\n          batch_size=batch_size,\n          epochs=epochs,\n          callbacks=my_callbacks,\n          validation_data=(x_test, y_test))\n\n#print('对测试集预测...')\n#result = model.predict(x_test)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3训练中间信息输出\"\n    }}>{`3.训练中间信息输出`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import matplotlib.pyplot as plt\nplt.switch_backend('agg')\n%matplotlib inline\n\nfig1 = plt.figure()\nplt.plot(history.history['loss'],'r',linewidth=3.0)\nplt.plot(history.history['val_loss'],'b',linewidth=3.0)\nplt.legend(['Training loss', 'Validation Loss'],fontsize=18)\nplt.xlabel('Epochs ',fontsize=16)\nplt.ylabel('Loss',fontsize=16)\nplt.title('Loss Curves :CNN',fontsize=16)\nfig1.savefig('loss_cnn.png')\nplt.show()\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../static/img/output_8_0.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`fig2=plt.figure()\nplt.plot(history.history['acc'],'r',linewidth=3.0)\nplt.plot(history.history['val_acc'],'b',linewidth=3.0)\nplt.legend(['Training Accuracy', 'Validation Accuracy'],fontsize=18)\nplt.xlabel('Epochs ',fontsize=16)\nplt.ylabel('Accuracy',fontsize=16)\nplt.title('Accuracy Curves : CNN',fontsize=16)\nfig2.savefig('accuracy_cnn.png')\nplt.show()\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../static/img/output_9_0.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"4模型结构打印\"\n    }}>{`4.模型结构打印`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from tensorflow.keras.utils import plot_model\nplot_model(model, show_shapes=True, show_layer_names=True)\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../static/img/CNN_structure.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"5模型导出\"\n    }}>{`5.模型导出`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import tensorflow as tf\nimport shutil \nmodel = tf.keras.models.load_model('./cnn_model.h5')\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"6预测模型\"\n    }}>{`6.预测模型`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import jieba\ntext = \"杨幂好漂亮,发生原子弹\"\nprint(jieba.lcut(text))\ntext_seg = encode_sentences([jieba.lcut(text)], word_to_id)\ntext_input = sequence.pad_sequences(text_seg, maxlen=maxlen)\nprint(model.predict(text_input))\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"7前后端结合docker部署\"\n    }}>{`7.前后端结合+docker部署`}</h3>\n    <p>{`项目demo：docker部署链接:`}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/repository/docker/flybirdgroup/classifier\"\n      }}>{`中文新闻多分类demo`}</a></p>\n    <p><inlineCode parentName=\"p\">{`docker启动命令`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`docker run -p 127.0.0.1:80:5000/tcp flybirdgroup/classifier\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../static/img/docker1.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../static/img/docker2.png\",\n        \"alt\": \"png\"\n      }}></img></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}